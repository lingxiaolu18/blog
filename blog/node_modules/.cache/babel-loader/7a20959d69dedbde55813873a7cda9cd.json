{"ast":null,"code":"var _jsxFileName = \"/Users/sf/code_base/React-blog/blog/src/App.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\nimport Posts from './Posts'; // const initialState = {\n//   isLoggedIn: false,\n//   userName: '',\n//   error: '',\n// };\n// const reducer = (state, action) => {\n//   switch(action.type){\n//     case 'LOGIN_SUCCESS':\n//       return {...state, isLoggedIn: true, userName: action.payload.data};\n//     case 'LOGIN_FAILED':\n//       return {...state, isLoggedIn: false, userName: '', error: action.payload.message};\n//     default:\n//       return state;\n//   }\n// }\n\nfunction App() {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [state, dispatch] = useReducer(reducer, initialState);\n  const [posts, setPosts] = useState({}); //   const callSignUpService = (username, password) => {\n  //   services.fetchLogIn(username, password)\n  //   .then((response) => {\n  //     dispatch({type: 'LOGIN_SUCCESS'},)\n  //   })\n  //   .catch((e) => {\n  //   })\n  // }\n\n  const fetchAllPosts = () => {\n    services.fetchAllUserPosts().then(response => {\n      console.log(response.data);\n      setPosts(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    fetchAllPosts(); // setIsLoading(true);\n    // services.fetchLoginStatus()\n    // .then((response) => {\n    //   console.log(\"You are logged in!\");\n    //   dispatch({type: 'LOGIN_SUCCESS', payload: response})\n    //   setIsLoading(false);\n    // })\n    // .catch((err) => {\n    //   console.log(err.message); //\"invalid session\"\n    //   dispatch({type: 'LOGIN_FAILED', payload: err});\n    //   setIsLoading(false);\n    // });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    postsToDisplay: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sf/code_base/React-blog/blog/src/App.jsx"],"names":["React","useState","useEffect","useReducer","services","LoginPane","Posts","App","posts","setPosts","fetchAllPosts","fetchAllUserPosts","then","response","console","log","data","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;;AAEA,OAAO,WAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,GAAT,GAAe;AACb;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAHa,CAKf;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAMS,aAAa,GAAG,MAAM;AAC1BN,IAAAA,QAAQ,CAACO,iBAAT,GACCC,IADD,CACMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAP,MAAAA,QAAQ,CAACI,QAAQ,CAACG,IAAV,CAAR;AACD,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KAPD;AAQD,GATD;;AAWEhB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,aAAa,GADC,CAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,KAAD;AAAO,IAAA,cAAc,EAAIF,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CARF,CADF;AAgBD;;AAED,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\nimport Posts from './Posts';\n\n\n\n// const initialState = {\n//   isLoggedIn: false,\n//   userName: '',\n//   error: '',\n// };\n\n// const reducer = (state, action) => {\n//   switch(action.type){\n//     case 'LOGIN_SUCCESS':\n//       return {...state, isLoggedIn: true, userName: action.payload.data};\n//     case 'LOGIN_FAILED':\n//       return {...state, isLoggedIn: false, userName: '', error: action.payload.message};\n//     default:\n//       return state;\n//   }\n// }\n\n\nfunction App() {\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [state, dispatch] = useReducer(reducer, initialState);\n  const [posts, setPosts] = useState({});\n\n//   const callSignUpService = (username, password) => {\n//   services.fetchLogIn(username, password)\n//   .then((response) => {\n//     dispatch({type: 'LOGIN_SUCCESS'},)\n//   })\n//   .catch((e) => {\n\n//   })\n// }\n\nconst fetchAllPosts = () => {\n  services.fetchAllUserPosts()\n  .then(response => {\n    console.log(response.data);\n    setPosts(response.data);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n};\n\n  useEffect(() => {\n    fetchAllPosts();\n    // setIsLoading(true);\n    // services.fetchLoginStatus()\n    // .then((response) => {\n    //   console.log(\"You are logged in!\");\n    //   dispatch({type: 'LOGIN_SUCCESS', payload: response})\n    //   setIsLoading(false);\n    // })\n    // .catch((err) => {\n    //   console.log(err.message); //\"invalid session\"\n    //   dispatch({type: 'LOGIN_FAILED', payload: err});\n    //   setIsLoading(false);\n    // });\n  }, []);\n\n  return (\n    <div className=\"App\">\n    {/* {isLoading? \n    <div className = \"Background\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div> : ''} */}\n    \n      <div className = \"Content\">\n        {/* {state.isLoggedIn? '' : <LoginPane/>} */}\n        {/* {state.error? state.error : ''} */}\n        <Posts postsToDisplay = {posts}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}