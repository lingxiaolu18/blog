{"ast":null,"code":"var _jsxFileName = \"/Users/sf/code_base/React-blog/blog/src/App.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\nconst initialState = {\n  isLoggedIn: false,\n  userName: '',\n  error: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return { ...state,\n        isLoggedIn: true,\n        userName: action.payload.data\n      };\n\n    case 'LOGIN_FAILED':\n      return { ...state,\n        isLoggedIn: false,\n        userName: '',\n        error: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    setIsLoading(true);\n    services.fetchLoginStatus().then(response => {\n      console.log(\"You are logged in!\");\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response\n      });\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err.message); //\"invalid session\"\n\n      dispatch({\n        type: 'LOGIN_FAILED',\n        payload: err\n      });\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }))) : '', /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, state.isLoggedIn ? '' : /*#__PURE__*/React.createElement(LoginPane, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }\n  }), state.error ? state.error : ''));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sf/code_base/React-blog/blog/src/App.jsx"],"names":["React","useState","useEffect","useReducer","services","LoginPane","initialState","isLoggedIn","userName","error","reducer","state","action","type","payload","data","message","App","isLoading","setIsLoading","dispatch","fetchLoginStatus","then","response","console","log","catch","err","logo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;;AAEA,OAAO,WAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,eAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAWJ,QAAAA,UAAU,EAAE,IAAvB;AAA6BC,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeC;AAAtD,OAAP;;AACF,SAAK,cAAL;AACE,aAAO,EAAC,GAAGJ,KAAJ;AAAWJ,QAAAA,UAAU,EAAE,KAAvB;AAA8BC,QAAAA,QAAQ,EAAE,EAAxC;AAA4CC,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeE;AAAlE,OAAP;;AACF;AACE,aAAOL,KAAP;AANJ;AAQD,CATD;;AAWA,SAASM,GAAT,GAAe;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQS,QAAR,IAAoBjB,UAAU,CAACO,OAAD,EAAUJ,YAAV,CAApC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAf,IAAAA,QAAQ,CAACiB,gBAAT,GACCC,IADD,CACOC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAL,MAAAA,QAAQ,CAAC;AAACP,QAAAA,IAAI,EAAE,eAAP;AAAwBC,QAAAA,OAAO,EAAES;AAAjC,OAAD,CAAR;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALD,EAMCO,KAND,CAMQC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACX,OAAhB,EADc,CACY;;AAC1BI,MAAAA,QAAQ,CAAC;AAACP,QAAAA,IAAI,EAAE,cAAP;AAAuBC,QAAAA,OAAO,EAAEa;AAAhC,OAAD,CAAR;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAVD;AAWD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,SAAS,gBACV;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEU,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADU,GAKD,EANT,eAQA;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAACJ,UAAN,GAAkB,EAAlB,gBAAuB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1B,EAEGI,KAAK,CAACF,KAAN,GAAaE,KAAK,CAACF,KAAnB,GAA2B,EAF9B,CARA,CADF;AAeD;;AAED,eAAeQ,GAAf","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\n\n\n\nconst initialState = {\n  isLoggedIn: false,\n  userName: '',\n  error: '',\n};\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'LOGIN_SUCCESS':\n      return {...state, isLoggedIn: true, userName: action.payload.data};\n    case 'LOGIN_FAILED':\n      return {...state, isLoggedIn: false, userName: '', error: action.payload.message};\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  \n  useEffect(() => {\n    setIsLoading(true);\n    services.fetchLoginStatus()\n    .then((response) => {\n      console.log(\"You are logged in!\");\n      dispatch({type: 'LOGIN_SUCCESS', payload: response})\n      setIsLoading(false);\n    })\n    .catch((err) => {\n      console.log(err.message); //\"invalid session\"\n      dispatch({type: 'LOGIN_FAILED', payload: err});\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n    {isLoading? \n    <div className = \"Background\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div> : ''}\n    \n    <div className = \"Content\">\n      {state.isLoggedIn? '' : <LoginPane/>}\n      {state.error? state.error : ''}\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}