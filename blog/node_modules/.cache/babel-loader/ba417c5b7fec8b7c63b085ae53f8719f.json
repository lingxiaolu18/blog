{"ast":null,"code":"var _jsxFileName = \"/Users/sf/code_base/React-blog/blog/src/App.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\nconst initialState = {\n  isLoggedIn: false,\n  userName: '',\n  error: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return { ...state,\n        isLoggedIn: true,\n        userName: action.payload.data\n      };\n\n    case 'LOGIN_FAILED':\n      return { ...state,\n        isLoggedIn: false,\n        userName: '',\n        error: action.payload.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    services.fetchLoginStatus().then(response => {\n      console.log(\"You are logged in!\");\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response\n      });\n    }).catch(err => {\n      console.log(err.message); //\"invalid session\"\n\n      dispatch({\n        type: 'LOGIN_FAILED'\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), state.isLoggedIn ? '' : /*#__PURE__*/React.createElement(LoginPane, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 31\n    }\n  }), state.error ? state.error : '');\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sf/code_base/React-blog/blog/src/App.jsx"],"names":["React","useState","useEffect","useReducer","services","LoginPane","initialState","isLoggedIn","userName","error","reducer","state","action","type","payload","data","message","App","dispatch","fetchLoginStatus","then","response","console","log","catch","err","logo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;;AAEA,OAAO,WAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,eAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAWJ,QAAAA,UAAU,EAAE,IAAvB;AAA6BC,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeC;AAAtD,OAAP;;AACF,SAAK,cAAL;AACE,aAAO,EAAC,GAAGJ,KAAJ;AAAWJ,QAAAA,UAAU,EAAE,KAAvB;AAA8BC,QAAAA,QAAQ,EAAE,EAAxC;AAA4CC,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeE;AAAlE,OAAP;;AACF;AACE,aAAOL,KAAP;AANJ;AAQD,CATD;;AAWA,SAASM,GAAT,GAAe;AACb,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBf,UAAU,CAACO,OAAD,EAAUJ,YAAV,CAApC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,QAAQ,CAACe,gBAAT,GACCC,IADD,CACOC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAL,MAAAA,QAAQ,CAAC;AAACL,QAAAA,IAAI,EAAE,eAAP;AAAwBC,QAAAA,OAAO,EAAEO;AAAjC,OAAD,CAAR;AACD,KAJD,EAKCG,KALD,CAKQC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACT,OAAhB,EADc,CACY;;AAC1BE,MAAAA,QAAQ,CAAC;AAACL,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACD,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEa,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGf,KAAK,CAACJ,UAAN,GAAkB,EAAlB,gBAAuB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ1B,EAKGI,KAAK,CAACF,KAAN,GAAaE,KAAK,CAACF,KAAnB,GAA2B,EAL9B,CADF;AASD;;AAED,eAAeQ,GAAf","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\n\nconst initialState = {\n  isLoggedIn: false,\n  userName: '',\n  error: ''\n};\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'LOGIN_SUCCESS':\n      return {...state, isLoggedIn: true, userName: action.payload.data};\n    case 'LOGIN_FAILED':\n      return {...state, isLoggedIn: false, userName: '', error: action.payload.message};\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  \n  useEffect(() => {\n    services.fetchLoginStatus()\n    .then((response) => {\n      console.log(\"You are logged in!\");\n      dispatch({type: 'LOGIN_SUCCESS', payload: response})\n    })\n    .catch((err) => {\n      console.log(err.message); //\"invalid session\"\n      dispatch({type: 'LOGIN_FAILED'});\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      {state.isLoggedIn? '' : <LoginPane/>}\n      {state.error? state.error : ''}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}