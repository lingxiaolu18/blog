{"ast":null,"code":"var _jsxFileName = \"/Users/sf/code_base/React-blog/blog/src/App.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\nimport Posts from './Posts';\nimport Error from './Error';\nimport SignupPane from './SignupPane';\nexport const StateContext = React.createContext();\nconst initialState = {\n  isLoggedIn: false,\n  showSignup: false,\n  userName: '',\n  error: '',\n  posts: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'REGISTER_SUCCESS':\n      return { ...state,\n        showSignup: false\n      };\n\n    case 'REGISTER_FAILED':\n      return { ...state,\n        showSignup: true,\n        error: action.payload\n      };\n\n    case 'LOGIN_SUCCESS':\n      return { ...state,\n        isLoggedIn: true,\n        userName: action.payload\n      };\n\n    case 'LOGIN_FAILED':\n      return { ...state,\n        isLoggedIn: false,\n        error: action.payload\n      };\n\n    case 'POSTS_FETCHED':\n      return { ...state,\n        posts: action.payload.data\n      };\n\n    case 'ERR_FOUND':\n      return { ...state,\n        error: action.payload\n      };\n\n    case 'TOGGLE_SIGNUP':\n      return { ...state,\n        showSignup: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const callRegister = (username, password) => {\n    services.fetchRegister(username, password).then(response => {\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: username\n      });\n    }).catch(e => {\n      dispatch({\n        type: 'REGISTER_FAILED',\n        payload: false\n      }); // dispatch({type: 'LOGIN_FAILED', payload: e})\n    });\n  };\n\n  const callLogin = (username, password) => {\n    services.fetchLogin(username, password).then(response => {\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: username\n      });\n      fetchAllPosts();\n    }).catch(e => {\n      dispatch({\n        type: 'LOGIN_FAILED',\n        payload: e.message\n      });\n    });\n  };\n\n  const fetchAllPosts = () => {\n    services.fetchAllUserPosts().then(response => {\n      // setPosts(response.data);\n      dispatch({\n        type: 'POSTS_FETCHED',\n        payload: response\n      });\n    }).catch(err => {\n      console.log(err); //set error message\n\n      dispatch({\n        type: 'ERROR_FOUND',\n        payload: err\n      });\n    });\n  };\n\n  useEffect(() => {\n    services.fetchLoginStatus().then(response => {\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response\n      });\n      fetchAllPosts();\n    }).catch(err => {\n      console.log(err.message); //\"invalid session\"\n\n      dispatch({\n        type: 'LOGIN_FAILED',\n        payload: err\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(StateContext.Provider, {\n    value: {\n      Context: state,\n      Dispatch: dispatch,\n      callRegister: callRegister,\n      callLogin: callLogin\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, state.error ? /*#__PURE__*/React.createElement(Error, {\n    err: state.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }) : '', state.showSignup ? /*#__PURE__*/React.createElement(SignupPane, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 28\n    }\n  }) : state.isLoggedIn ? '' : /*#__PURE__*/React.createElement(LoginPane, {\n    dispatch: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 67\n    }\n  }), state.isLoggedIn ? /*#__PURE__*/React.createElement(Posts, {\n    postsToDisplay: state.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 28\n    }\n  }) : '')));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sf/code_base/React-blog/blog/src/App.jsx"],"names":["React","useState","useEffect","useReducer","services","LoginPane","Posts","Error","SignupPane","StateContext","createContext","initialState","isLoggedIn","showSignup","userName","error","posts","reducer","state","action","type","payload","data","App","dispatch","callRegister","username","password","fetchRegister","then","response","catch","e","callLogin","fetchLogin","fetchAllPosts","message","fetchAllUserPosts","err","console","log","fetchLoginStatus","Context","Dispatch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\nimport Posts from './Posts';\nimport Error from './Error';\nimport SignupPane from './SignupPane';\n\nexport const StateContext = React.createContext();\n\nconst initialState = {\n  isLoggedIn: false,\n  showSignup: false,\n  userName: '',\n  error: '',\n  posts: []\n};\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'REGISTER_SUCCESS':\n      return {...state, showSignup: false}\n    case 'REGISTER_FAILED':\n      return {...state, showSignup: true, error: action.payload}\n    case 'LOGIN_SUCCESS':\n      return {...state, isLoggedIn: true, userName: action.payload};\n    case 'LOGIN_FAILED':\n      return {...state, isLoggedIn: false, error: action.payload};\n    case 'POSTS_FETCHED':\n      return {...state, posts: action.payload.data}\n    case 'ERR_FOUND':\n      return {...state, error: action.payload}\n    case 'TOGGLE_SIGNUP':\n      return {...state, showSignup: action.payload}\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const callRegister = (username, password) => {\n  services.fetchRegister(username, password)\n  .then((response) => {\n    dispatch({type: 'REGISTER_SUCCESS', payload: username});\n  })\n  .catch((e) => {\n    dispatch({type: 'REGISTER_FAILED', payload: false});\n    // dispatch({type: 'LOGIN_FAILED', payload: e})\n  })\n}\n\nconst callLogin = (username, password) => {\n  services.fetchLogin(username, password)\n  .then((response) => {\n    dispatch({type: 'LOGIN_SUCCESS', payload: username});\n    fetchAllPosts();\n  })\n  .catch((e) => {\n    dispatch({type: 'LOGIN_FAILED', payload: e.message});\n  })\n}\n\nconst fetchAllPosts = () => {\n  services.fetchAllUserPosts()\n  .then(response => {\n    // setPosts(response.data);\n    dispatch({type: 'POSTS_FETCHED', payload: response})\n  })\n  .catch(err => {\n    console.log(err);\n    //set error message\n    dispatch({type: 'ERROR_FOUND', payload: err})\n  });\n};\n\n  useEffect(() => {\n    services.fetchLoginStatus()\n    .then((response) => {\n      dispatch({type: 'LOGIN_SUCCESS', payload: response})\n      fetchAllPosts();\n    })\n    .catch((err) => {\n      console.log(err.message); //\"invalid session\"\n      dispatch({type: 'LOGIN_FAILED', payload: err});\n    });\n  }, []);\n\n  return (\n    <StateContext.Provider value = {{Context: state, Dispatch: dispatch, callRegister: callRegister, callLogin: callLogin}}>\n    <div className=\"App\">\n      <div className = \"Content\">\n        {state.error? <Error err = {state.error}/> : ''}\n        {state.showSignup? <SignupPane/> : state.isLoggedIn? '' : <LoginPane dispatch = {dispatch}/>}\n        {state.isLoggedIn? <Posts postsToDisplay = {state.posts}/> : ''}\n      </div>\n    </div>\n    </StateContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}