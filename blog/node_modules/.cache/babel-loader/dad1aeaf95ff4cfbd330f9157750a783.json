{"ast":null,"code":"var _jsxFileName = \"/Users/sf/code_base/React-blog/blog/src/App.jsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\nimport Posts from './Posts';\nconst initialState = {\n  isLoggedIn: false,\n  userName: '',\n  error: '',\n  isLoading: true,\n  posts: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return { ...state,\n        isLoggedIn: true\n      };\n\n    case 'LOGIN_FAILED':\n      return { ...state,\n        isLoggedIn: false,\n        error: action.payload.message\n      };\n\n    case 'POSTS_FETCHED':\n      return { ...state,\n        posts: action.payload.data\n      };\n\n    case 'ERR_FOUND':\n      return { ...state,\n        error: action.payload\n      };\n\n    case 'SET_LOADING':\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  // const [isLoading, setIsLoading] = useState(true);\n  const [state, dispatch] = useReducer(reducer, initialState); // const [posts, setPosts] = useState([]);\n  //   const callSignUpService = (username, password) => {\n  //   services.fetchLogIn(username, password)\n  //   .then((response) => {\n  //     dispatch({type: 'LOGIN_SUCCESS'},)\n  //   })\n  //   .catch((e) => {\n  //   })\n  // }\n\n  const fetchAllPosts = () => {\n    services.fetchAllUserPosts().then(response => {\n      // setPosts(response.data);\n      dispatch({\n        type: 'POSTS_FETCHED',\n        payload: response\n      });\n    }).catch(err => {\n      console.log(err); //set error message\n\n      dispatch({\n        type: 'ERROR_FOUND',\n        payload: err\n      });\n    });\n  };\n\n  useEffect(() => {\n    services.fetchLoginStatus().then(response => {\n      console.log(\"You are logged in!\");\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response\n      });\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      fetchAllPosts();\n    }).catch(err => {\n      console.log(err.message); //\"invalid session\"\n\n      dispatch({\n        type: 'LOGIN_FAILED',\n        payload: err\n      });\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, state.isLoading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }) : '', /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, state.error ? state.error : '', state.isLoggedIn ? '' : /*#__PURE__*/React.createElement(LoginPane, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }), state.isLoggedIn ? /*#__PURE__*/React.createElement(Posts, {\n    postsToDisplay: state.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }\n  }) : ''));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sf/code_base/React-blog/blog/src/App.jsx"],"names":["React","useState","useEffect","useReducer","services","LoginPane","Posts","initialState","isLoggedIn","userName","error","isLoading","posts","reducer","state","action","type","payload","message","data","App","dispatch","fetchAllPosts","fetchAllUserPosts","then","response","catch","err","console","log","fetchLoginStatus","logo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as services from './services';\nimport LoginPane from './LoginPane';\nimport Posts from './Posts';\n\n\n\nconst initialState = {\n  isLoggedIn: false,\n  userName: '',\n  error: '',\n  isLoading: true,\n  posts: []\n};\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'LOGIN_SUCCESS':\n      return {...state, isLoggedIn: true};\n    case 'LOGIN_FAILED':\n      return {...state, isLoggedIn: false, error: action.payload.message};\n    case 'POSTS_FETCHED':\n      return {...state, posts: action.payload.data}\n    case 'ERR_FOUND':\n      return {...state, error: action.payload}\n    case 'SET_LOADING':\n      return {...state, error: action.payload}\n    default:\n      return state;\n  }\n}\n\n\nfunction App() {\n  // const [isLoading, setIsLoading] = useState(true);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  // const [posts, setPosts] = useState([]);\n\n//   const callSignUpService = (username, password) => {\n//   services.fetchLogIn(username, password)\n//   .then((response) => {\n//     dispatch({type: 'LOGIN_SUCCESS'},)\n//   })\n//   .catch((e) => {\n\n//   })\n// }\n\nconst fetchAllPosts = () => {\n  services.fetchAllUserPosts()\n  .then(response => {\n    // setPosts(response.data);\n    dispatch({type: 'POSTS_FETCHED', payload: response})\n  })\n  .catch(err => {\n    console.log(err);\n    //set error message\n    dispatch({type: 'ERROR_FOUND', payload: err})\n  });\n};\n\n  useEffect(() => {\n    services.fetchLoginStatus()\n    .then((response) => {\n      console.log(\"You are logged in!\");\n      dispatch({type: 'LOGIN_SUCCESS', payload: response})\n      dispatch({type: 'SET_LOADING', payload: false});\n      fetchAllPosts();\n    })\n    .catch((err) => {\n      console.log(err.message); //\"invalid session\"\n      dispatch({type: 'LOGIN_FAILED', payload: err});\n      dispatch({type: 'SET_LOADING', payload: false});\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {state.isLoading? <img src={logo} className=\"App-logo\" alt=\"logo\" /> : ''}\n      <div className = \"Content\">\n        {state.error? state.error : ''}\n        {state.isLoggedIn? '' : <LoginPane/>}\n        {state.isLoggedIn? <Posts postsToDisplay = {state.posts}/> : ''}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}